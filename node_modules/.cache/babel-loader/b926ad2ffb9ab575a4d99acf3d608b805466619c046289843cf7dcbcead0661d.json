{"ast":null,"code":"var _jsxFileName = \"C:\\\\code\\\\CodeAmy\\\\Projects\\\\Appointment_Planner_React\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\";\nimport Root, { ROUTES } from \"./components/root/Root\";\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* Define state variables for contacts and appointments */\n  const [contacts, setContacts] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const ROUTES = {\n    CONTACTS: '/contacts',\n    APPOINTMENTS: '/appointments'\n  };\n\n  /* Implement functions to add data to contacts and appointments */\n  const addContact = (name, number, email) => {\n    const newContact = {\n      name: name,\n      number: number,\n      email: email\n    };\n    setContacts([...contacts, {\n      newContact\n    }]);\n  };\n  const addAppointment = (title, contact, date, time) => {\n    const newApmnt = {\n      title: title,\n      contact: contact,\n      date: date,\n      time: time\n    };\n    setAppointments([...appointments, {\n      newApmnt\n    }]);\n  };\n  return;\n  const router = createBrowserRouter(createRoutesFromElements( /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 31\n    }, this),\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      index: true,\n      element: /*#__PURE__*/_jsxDEV(Navigate, {\n        to: ROUTES.CONTACTS,\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.CONTACTS,\n      element: /*#__PURE__*/_jsxDEV(ContactsPage, {\n        contacts: contacts,\n        addContact: addContact\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 47\n      }, this) /* Adding props to the ContactsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: ROUTES.APPOINTMENTS,\n      element: /*#__PURE__*/_jsxDEV(AppointmentsPage, {\n        contacts: contacts,\n        appointments: appointments,\n        addappointment: addAppointment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 51\n      }, this) /* Adding props to the AppointmentsPage */\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this)));\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ilNV2NNtl3t/F9tV3D6w+C6XRbg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RouterProvider","createBrowserRouter","createRoutesFromElements","Route","Navigate","Root","ROUTES","AppointmentsPage","ContactsPage","jsxDEV","_jsxDEV","App","_s","contacts","setContacts","appointments","setAppointments","CONTACTS","APPOINTMENTS","addContact","name","number","email","newContact","addAppointment","title","contact","date","time","newApmnt","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","index","to","replace","addappointment","_c","$RefreshReg$"],"sources":["C:/code/CodeAmy/Projects/Appointment_Planner_React/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { RouterProvider, createBrowserRouter, createRoutesFromElements, Route, Navigate } from \"react-router-dom\"\r\nimport Root, { ROUTES } from \"./components/root/Root\";\r\nimport { AppointmentsPage } from \"./containers/appointmentsPage/AppointmentsPage\";\r\nimport { ContactsPage } from \"./containers/contactsPage/ContactsPage\";\r\n\r\nfunction App() {\r\n  /* Define state variables for contacts and appointments */\r\n  const [contacts, setContacts] = useState([]);\r\n  const [appointments, setAppointments] = useState([]);\r\n\r\n  const ROUTES = {\r\n    CONTACTS: '/contacts',\r\n    APPOINTMENTS: '/appointments'\r\n  };\r\n\r\n  /* Implement functions to add data to contacts and appointments */\r\n  const addContact = (name, number, email) => {\r\n    const newContact = {name: name, number: number, email: email};\r\n    setContacts([...contacts, {newContact}]);       \r\n  }\r\n  const addAppointment = (title, contact, date, time) => {\r\n    const newApmnt = {title: title, contact: contact, date: date, time: time};\r\n    setAppointments([...appointments, {newApmnt}]);\r\n  }\r\n\r\n  return \r\n\r\n  const router = createBrowserRouter(createRoutesFromElements(\r\n    <Route path=\"/\" element={ <Root/> }>\r\n      <Route index element={ <Navigate to={ROUTES.CONTACTS} replace/> }/>\r\n      <Route path={ROUTES.CONTACTS} element={ <ContactsPage contacts={contacts} addContact={addContact}/> /* Adding props to the ContactsPage */ }/>\r\n      <Route path={ROUTES.APPOINTMENTS} element={ <AppointmentsPage contacts={contacts} appointments={appointments} addappointment={addAppointment}/> /* Adding props to the AppointmentsPage */ }/>\r\n    </Route>\r\n  ));\r\n  \r\n  return (\r\n    <RouterProvider router={router}/>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}